<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NED0001Description" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;PackageId /&gt; tag. This tag is crucial as it uniquely identifies the package within the project, ensuring proper management and deployment. Without a valid &lt;PackageId /&gt;, the build process may fail, leading to potential issues in package restoration and versioning.</value>
  </data>
  <data name="NED0008Description" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;Company /&gt; tag. This tag is important as it specifies the name of the company or organization responsible for the project. An incomplete or absent &lt;Company /&gt; tag can lead to confusion regarding ownership and may affect branding and recognition in the community.</value>
  </data>
  <data name="NED0007Description" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;Authors /&gt; tag. This tag is essential as it specifies the authors of the project, providing credit and context for contributions. An incomplete or absent &lt;Authors /&gt; tag can lead to confusion about authorship and may affect collaboration and recognition within the community.</value>
  </data>
  <data name="NED0006Description" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;RepositoryUrl /&gt; tag. This tag is crucial as it specifies the URL of the project’s source code repository, enabling users and contributors to access the codebase, report issues, and contribute to development. An incomplete or absent &lt;RepositoryUrl /&gt; can limit collaboration and hinder user engagement.</value>
  </data>
  <data name="NED0005Description" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;PackageProjectUrl /&gt; tag. This tag is vital as it specifies the URL for the project’s homepage or repository, allowing users to easily find more information, documentation, or source code. An incomplete or absent &lt;PackageProjectUrl /&gt; can hinder user engagement and limit the project’s visibility.</value>
  </data>
  <data name="NED0004Description" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;PackageTags /&gt; tag. This tag is essential for categorizing your package and improving its discoverability in package repositories. Without a properly configured &lt;PackageTags /&gt;, users may find it challenging to locate your project, which can impact its adoption and usage.</value>
  </data>
  <data name="NED0003Description" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;Description /&gt; tag. This tag is important as it provides a brief overview of your project, helping users and developers understand its purpose and functionality. An incomplete or absent &lt;Description /&gt; can lead to misunderstandings about the project’s goals and may hinder effective collaboration.</value>
  </data>
  <data name="NED0002Description" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;Title /&gt; tag. This tag is essential as it defines the display name of your project, which is used in various contexts, including package management and user interfaces. An incomplete or absent &lt;Title /&gt; can lead to confusion during deployment and may affect how users perceive your project.</value>
  </data>
  <data name="NED0001Message" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;PackageId /&gt; tag.</value>
  </data>
  <data name="NED0008Message" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;Company /&gt; tag.</value>
  </data>
  <data name="NED0007Message" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;Authors /&gt; tag.</value>
  </data>
  <data name="NED0006Message" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;RepositoryUrl /&gt; tag.</value>
  </data>
  <data name="NED0005Message" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;PackageProjectUrl /&gt; tag.</value>
  </data>
  <data name="NED0004Message" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;PackageTags /&gt; tag.</value>
  </data>
  <data name="NED0003Message" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;Description /&gt; tag.</value>
  </data>
  <data name="NED0002Message" xml:space="preserve">
    <value>The project file is missing or has an incomplete configuration for the &lt;Title /&gt; tag.</value>
  </data>
  <data name="NED0001Title" xml:space="preserve">
    <value>Configuration Error: &lt;PackageId /&gt; Tag Missing or Incomplete</value>
  </data>
  <data name="NED0002Title" xml:space="preserve">
    <value>Configuration Error: &lt;Title /&gt; Tag Missing or Incomplete</value>
  </data>
  <data name="NED0007Title" xml:space="preserve">
    <value>Configuration Error: &lt;Authors /&gt; Tag Missing or Incomplete</value>
  </data>
  <data name="NED0006Title" xml:space="preserve">
    <value>Configuration Error: &lt;RepositoryUrl /&gt; Tag Missing or Incomplete</value>
  </data>
  <data name="NED0005Title" xml:space="preserve">
    <value>Configuration Error: &lt;PackageProjectUrl /&gt; Tag Missing or Incomplete</value>
  </data>
  <data name="NED0004Title" xml:space="preserve">
    <value>Configuration Error: &lt;PackageTags /&gt; Tag Missing or Incomplete</value>
  </data>
  <data name="NED0003Title" xml:space="preserve">
    <value>Configuration Error: &lt;Description /&gt; Tag Missing or Incomplete</value>
  </data>
  <data name="NED0008Title" xml:space="preserve">
    <value>Configuration Error: &lt;Company /&gt; Tag Missing or Incomplete</value>
  </data>
</root>